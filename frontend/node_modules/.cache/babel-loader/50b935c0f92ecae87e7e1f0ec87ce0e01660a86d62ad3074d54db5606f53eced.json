{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description A class that defines how to recolor objects in an asset using Generative AI\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass GenerativeRecolor extends Action {\n  constructor(prompts, color) {\n    super();\n    this._prompts = [];\n    this._detectMultiple = false;\n    this._prompts = Array.isArray(prompts) ? prompts : [prompts];\n    this._toColor = color;\n    this._actionModel.actionType = \"generativeRecolor\";\n    this._actionModel.prompts = this._prompts;\n    this._actionModel.toColor = this._toColor;\n  }\n  multiple() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._detectMultiple = value;\n    if (this._detectMultiple) {\n      this._actionModel.detectMultiple = this._detectMultiple;\n    }\n    return this;\n  }\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue().setDelimiter(\";\");\n    if (this._prompts.length) {\n      qualifierValue.addValue(this.preparePromptValue());\n    }\n    if (this._toColor) {\n      const formattedColor = this._toColor.match(/^#/) ? this._toColor.substr(1) : this._toColor;\n      qualifierValue.addValue(`to-color_${formattedColor}`);\n    }\n    this.addQualifier(new Qualifier(\"e\", `gen_recolor:${qualifierValue.toString()}`));\n  }\n  preparePromptValue() {\n    const prompts = this._prompts;\n    const detectMultiple = this._detectMultiple;\n    const qualifierValue = new QualifierValue().setDelimiter(\";\");\n    if (prompts.length === 1) {\n      qualifierValue.addValue(`prompt_${prompts[0]}`);\n      if (detectMultiple) {\n        qualifierValue.addValue(\"multiple_true\");\n      }\n    } else {\n      qualifierValue.addValue(`prompt_(${prompts.join(\";\")})`);\n    }\n    return qualifierValue;\n  }\n  static fromJson(actionModel) {\n    const {\n      prompts,\n      detectMultiple,\n      toColor\n    } = actionModel;\n    const result = new this(prompts, toColor);\n    if (detectMultiple) {\n      result.multiple(detectMultiple);\n    }\n    return result;\n  }\n}\nexport { GenerativeRecolor };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","GenerativeRecolor","constructor","prompts","color","_prompts","_detectMultiple","Array","isArray","_toColor","_actionModel","actionType","toColor","multiple","value","arguments","length","undefined","detectMultiple","prepareQualifiers","qualifierValue","setDelimiter","addValue","preparePromptValue","formattedColor","match","substr","addQualifier","toString","join","fromJson","actionModel","result"],"sources":["C:/Users/KARAN/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/GenerativeRecolor.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description A class that defines how to recolor objects in an asset using Generative AI\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass GenerativeRecolor extends Action {\n    constructor(prompts, color) {\n        super();\n        this._prompts = [];\n        this._detectMultiple = false;\n        this._prompts = Array.isArray(prompts) ? prompts : [prompts];\n        this._toColor = color;\n        this._actionModel.actionType = \"generativeRecolor\";\n        this._actionModel.prompts = this._prompts;\n        this._actionModel.toColor = this._toColor;\n    }\n    multiple(value = true) {\n        this._detectMultiple = value;\n        if (this._detectMultiple) {\n            this._actionModel.detectMultiple = this._detectMultiple;\n        }\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue().setDelimiter(\";\");\n        if (this._prompts.length) {\n            qualifierValue.addValue(this.preparePromptValue());\n        }\n        if (this._toColor) {\n            const formattedColor = this._toColor.match(/^#/) ? this._toColor.substr(1) : this._toColor;\n            qualifierValue.addValue(`to-color_${formattedColor}`);\n        }\n        this.addQualifier(new Qualifier(\"e\", `gen_recolor:${qualifierValue.toString()}`));\n    }\n    preparePromptValue() {\n        const prompts = this._prompts;\n        const detectMultiple = this._detectMultiple;\n        const qualifierValue = new QualifierValue().setDelimiter(\";\");\n        if (prompts.length === 1) {\n            qualifierValue.addValue(`prompt_${prompts[0]}`);\n            if (detectMultiple) {\n                qualifierValue.addValue(\"multiple_true\");\n            }\n        }\n        else {\n            qualifierValue.addValue(`prompt_(${prompts.join(\";\")})`);\n        }\n        return qualifierValue;\n    }\n    static fromJson(actionModel) {\n        const { prompts, detectMultiple, toColor } = actionModel;\n        const result = new this(prompts, toColor);\n        if (detectMultiple) {\n            result.multiple(detectMultiple);\n        }\n        return result;\n    }\n}\nexport { GenerativeRecolor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}